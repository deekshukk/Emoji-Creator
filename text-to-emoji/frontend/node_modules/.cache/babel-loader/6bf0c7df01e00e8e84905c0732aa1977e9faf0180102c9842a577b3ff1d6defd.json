{"ast":null,"code":"var _jsxFileName = \"/Users/deekshukannan/Emoji-Creator/text-to-emoji/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"@headlessui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [emojiUrl, setEmojiUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const generateEmoji = async () => {\n    if (!prompt.trim()) return;\n    setIsLoading(true);\n    setError(\"\");\n    setEmojiUrl(\"\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/generate-emoji\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: prompt.trim()\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setEmojiUrl(data.image);\n      } else {\n        setError(data.error || \"Failed to generate emoji\");\n      }\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setError(\"Failed to connect to server. Make sure the backend is running on port 5000.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const saveImage = () => {\n    if (!emojiUrl) return;\n    const link = document.createElement(\"a\");\n    link.href = emojiUrl;\n    link.download = `emoji-${prompt.replace(/\\s+/g, \"-\").toLowerCase()}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: \"AI Emoji Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p\",\n        children: \"Create the emojis of your dreams.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: \"custom-input\",\n        placeholder: \"Describe your emoji...\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && generateEmoji()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"custom-button\",\n      onClick: generateEmoji,\n      disabled: isLoading || !prompt.trim(),\n      children: isLoading ? \"Generating...\" : \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), emojiUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: emojiUrl,\n        alt: \"Generated emoji\",\n        className: \"generated-emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"save-button\",\n        onClick: saveImage,\n        children: \"Save Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bCo1dMhCUENA/WsTuIkMy1eM6mY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Input","Button","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","emojiUrl","setEmojiUrl","error","setError","isLoading","setIsLoading","generateEmoji","trim","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","image","err","console","saveImage","link","document","createElement","href","download","replace","toLowerCase","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyDown","key","onClick","disabled","src","alt","_c","$RefreshReg$"],"sources":["/Users/deekshukannan/Emoji-Creator/text-to-emoji/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"@headlessui/react\";\n\nfunction App() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [emojiUrl, setEmojiUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const generateEmoji = async () => {\n    if (!prompt.trim()) return;\n\n    setIsLoading(true);\n    setError(\"\");\n    setEmojiUrl(\"\");\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/generate-emoji\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: prompt.trim() }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.success) {\n        setEmojiUrl(data.image);\n      } else {\n        setError(data.error || \"Failed to generate emoji\");\n      }\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setError(\n        \"Failed to connect to server. Make sure the backend is running on port 5000.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const saveImage = () => {\n    if (!emojiUrl) return;\n\n    const link = document.createElement(\"a\");\n    link.href = emojiUrl;\n    link.download = `emoji-${prompt.replace(/\\s+/g, \"-\").toLowerCase()}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1 className=\"h1\">AI Emoji Generator</h1>\n        <p className=\"p\">Create the emojis of your dreams.</p>\n      </header>\n\n      <div className=\"box\">\n        <Input\n          className=\"custom-input\"\n          placeholder=\"Describe your emoji...\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && generateEmoji()}\n        />\n      </div>\n\n      <Button\n        className=\"custom-button\"\n        onClick={generateEmoji}\n        disabled={isLoading || !prompt.trim()}\n      >\n        {isLoading ? \"Generating...\" : \"Generate\"}\n      </Button>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {emojiUrl && (\n        <div className=\"emoji-result\">\n          <img\n            src={emojiUrl}\n            alt=\"Generated emoji\"\n            className=\"generated-emoji\"\n          />\n          <Button className=\"save-button\" onClick={saveImage}>\n            Save Image\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}